{"version":3,"sources":["webpack:///webpack/bootstrap f15123e221599420d68f","webpack:///./src/index.js","webpack:///external \"botpress-version-manager\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///external \"lodash\"","webpack:///external \"crypto\"","webpack:///external \"axios\""],"names":["config","service","getClient","create","baseURL","timeout","process","env","BOTPRESS_HTTP_TIMEOUT","headers","accessToken","setService","userId","text","post","query","lang","sessionId","errorHandler","bp","err","get","error","code","errorType","errorDetails","console","log","stack","logger","warn","sendOutgoing","event","data","result","fulfillment","speech","length","middlewares","type","platform","raw","to","user","id","message","contextAdd","name","lifespan","params","contextRemove","delete","triggerEvent","originalEvent","then","catch","incomingMiddleware","next","shortUserId","createHash","update","digest","response","mode","nlp","Object","assign","context","add","remove","module","exports","default","validation","init","configurator","__dirname","register","handler","order","description","loadAll","ready","router","getRouter","req","res","send","body","saveAll","sendStatus"],"mappings":"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","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Confidential/code/chatbot/botpress-api.ai\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f15123e221599420d68f","import checkVersion from 'botpress-version-manager'\nimport path from 'path'\nimport fs from 'fs'\nimport _ from 'lodash'\nimport crypto from 'crypto'\n\nimport axios from 'axios'\n\nlet config = null\nlet service = null\n\nconst getClient = () => {\n  return axios.create({\n    baseURL: 'https://api.api.ai/v1',\n    timeout: process.env.BOTPRESS_HTTP_TIMEOUT || 5000,\n    headers: {'Authorization': 'Bearer ' + config.accessToken}\n  })\n}\n\nconst setService = () => {\n  service = (userId, text) => {\n    return getClient().post('/query?v=20170101', {\n      query: text,\n      lang: config.lang,\n      sessionId: userId\n    })\n  }\n}\n\nconst errorHandler = (bp) => error => {\n  let err = _.get(error, 'response.data.status')\n         || _.get(error, 'message')\n         || error\n         || 'Unknown error'\n\n  if (err && err.code) {\n    err = '[' + err.code + '] Type:' + err.errorType + ':', err.errorDetails\n  }\n\n  console.log(error.stack)\n\n  bp.logger.warn('botpress-api.ai', 'API Error. Could not trigger event: ' + err);\n}\n\nconst sendOutgoing = (event) => ({data}) => {\n  const {result} = data\n  if (result.fulfillment\n      && result.fulfillment.speech\n      && result.fulfillment.speech.length > 0) {\n    event.bp.middlewares.sendOutgoing({\n      type: 'text',\n      platform: event.platform,\n      text: result.fulfillment.speech,\n      raw: {\n        to: event.user.id,\n        message: result.fulfillment.speech\n      },\n      user: event.user,\n    })\n  }\n}\n\nconst contextAdd = userId => (name, lifespan = 1) => {\n  return getClient().post('/contexts?v=20170101', [\n    { name, lifespan }\n  ], { params: {sessionId: userId } })\n}\n\nconst contextRemove = userId => name => {\n  return getClient().delete('/contexts/' + name, { params: { sessionId: userId } })\n}\n\nconst triggerEvent = (userId, originalEvent) => (name, data = {}) => {\n  return getClient().post('/query?v=20170101', {\n    event: {\n      name,\n      data,\n    },\n    lang: config.lang,\n    sessionId: userId,\n  })\n    .then(sendOutgoing(originalEvent))\n    .catch(errorHandler(originalEvent.bp))\n}\n\nconst incomingMiddleware = (event, next) => {\n  if (event.type === 'message') {\n\n  let shortUserId = event.user.id\n  if (shortUserId.length > 36) {\n    shortUserId = crypto.createHash('md5').update(shortUserId).digest(\"hex\")\n  }\n\n    service(shortUserId, event.text)\n    .then((response) => {\n      if (config.mode === 'fulfillment') {\n        sendOutgoing(event)(response)\n        return null // swallow the event, don't call next()\n      } else {\n        const { data: { result }} = response\n        event.nlp = Object.assign(result, {\n          context: {\n            add: contextAdd(shortUserId),\n            remove: contextRemove(shortUserId)\n          },\n          triggerEvent: triggerEvent(shortUserId, event),\n        })\n        next()\n      }\n    })\n    .catch(errorHandler(event.bp))\n  } else {\n    event.nlp = {\n      context: {\n        add: contextAdd(shortUserId),\n        remove: contextRemove(shortUserId)\n      },\n      triggerEvent: triggerEvent(shortUserId, event),\n    }\n\n    next()\n  }\n}\n\nmodule.exports = {\n\n  config: {\n    accessToken: { type: 'string', env: 'APIAI_TOKEN' },\n    lang: { type: 'string', default: 'en' },\n    mode: { type: 'choice', validation: ['fulfillment', 'default'], default: 'default' }\n  },\n\n  init: async function(bp, configurator) {\n    checkVersion(bp, __dirname)\n\n    bp.middlewares.register({\n      name: 'apiai.incoming',\n      module: 'botpress-api.ai',\n      type: 'incoming',\n      handler: incomingMiddleware,\n      order: 10,\n      description: 'Process natural language in the form of text. Structured data with an action and parameters for that action is injected in the incoming message event.'\n    })\n\n    config = await configurator.loadAll()\n    setService()\n  },\n\n  ready: async function(bp, configurator) {\n    const router = bp.getRouter('botpress-apiai')\n\n    router.get('/config', async (req, res) => {\n      res.send(await configurator.loadAll())\n    })\n\n    router.post('/config', async (req, res) => {\n      const { accessToken, lang, mode } = req.body\n      await configurator.saveAll({ accessToken, lang, mode })\n      config = await configurator.loadAll()\n      setService()\n      res.sendStatus(200)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"botpress-version-manager\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress-version-manager\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"path\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"path\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"crypto\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"crypto\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}